<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="BookStore.AppShell"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:author="clr-namespace:BookStore.Views.Author"
    xmlns:book="clr-namespace:BookStore.Views.Book"
    xmlns:category="clr-namespace:BookStore.Views.Category"
    xmlns:genre="clr-namespace:BookStore.Views.Genre"
    xmlns:local="clr-namespace:BookStore.Views"
    xmlns:order="clr-namespace:BookStore.Views.Order"
    xmlns:review="clr-namespace:BookStore.Views.Review"
    xmlns:user="clr-namespace:BookStore.Views.User"
    xmlns:viewmodel="clr-namespace:BookStore.ViewModels"
    Title="BookStore"
    x:Name="BookStore">

    <Shell.BindingContext>
        <viewmodel:AppShellViewModel/>
    </Shell.BindingContext>

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
        
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Color x:Key="Purple">#7B82D8</Color>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource LightFiolet}" />
                <Setter Property="Shell.ForegroundColor" Value="Black" />
                <Setter Property="Shell.TitleColor" Value="Black" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Background}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="Black" />
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor" Value="White" />
            </Style>
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="TabBar" />
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="FlyoutItem" />

            <!--
                Default Styles for all Flyout Items
                https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White" />
            </Style>
            <Style
                ApplyToDerivedTypes="True"
                Class="FlyoutItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Purple}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Purple}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
                Custom Style you can apply to any Flyout Item
            -->
            <Style
                ApplyToDerivedTypes="True"
                Class="MenuItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="White" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!--
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <!--  =================================================================================  -->
    <!--  ==============================  MENU  ===========================================  -->
    <!--  =================================================================================  -->

    <FlyoutItem Title="About" Icon="Icons/icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Books" Icon="Icons/local_mall.png" IsVisible="{Binding IsUser}">
        <ShellContent Route="BooksPage" ContentTemplate="{DataTemplate book:BookPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Authors" Icon="Icons/bookmark.png" IsVisible="{Binding IsUser}">
        <ShellContent Route="AuthorsPage" ContentTemplate="{DataTemplate author:AuthorPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Reviews" Icon="Icons/clinical_notes.png" IsVisible="{Binding IsUser}">
        <ShellContent Route="ReviewsPage" ContentTemplate="{DataTemplate review:ReviewPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Orders" Icon="Icons/notifications.png" IsVisible="{Binding IsAdmin}">
        <ShellContent Route="OrderPage" ContentTemplate="{DataTemplate order:OrderPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Categories" Icon="Icons/category.png" IsVisible="{Binding IsAdmin}">
        <ShellContent Route="CategoriesPage" ContentTemplate="{DataTemplate category:CategoryPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Genres" Icon="Icons/bookmark.png" IsVisible="{Binding IsAdmin}">
        <ShellContent Route="GenrePage" ContentTemplate="{DataTemplate genre:GenrePage}" />
    </FlyoutItem>

    <FlyoutItem Title="Users" Icon="Icons/groups.png" IsVisible="{Binding IsAdmin}">
        <ShellContent Route="UsersPage" ContentTemplate="{DataTemplate user:UserPage}" />
    </FlyoutItem>

    <!--  When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem
        Clicked="OnMenuItemClicked"
        IconImageSource="Icons/logout.png"
        StyleClass="MenuItemLayoutStyle"
        Text="Logout" />

    <!--  =============================================================================================================================  -->
    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where
        you don't want users to be able to navigate away from. If you would like to navigate to this
        content you can do so by calling
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent ContentTemplate="{DataTemplate local:LoginPage}" Route="LoginPage" />
    </TabBar>
    <!--<TabBar>
        <ShellContent ContentTemplate="{DataTemplate local:AboutPage}" Route="AboutPage" />
    </TabBar>-->
    <!-- Optional Templates
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
